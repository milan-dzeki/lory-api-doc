(this["webpackJsonplory-api-docs"]=this["webpackJsonplory-api-docs"]||[]).push([[0],{10:function(e,s,c){"use strict";c.r(s);var j=c(1),t=c.n(j),r=c(3),i=c.n(r),b=(c(8),c(0));var n=function(){return Object(b.jsxs)(b.Fragment,{children:[Object(b.jsx)("header",{children:"Lory API"}),Object(b.jsxs)("main",{children:[Object(b.jsxs)("section",{children:[Object(b.jsx)("h2",{children:"authentication/users"}),Object(b.jsxs)("p",{className:"url",children:["base url: ",Object(b.jsx)("strong",{children:"/api/users"})]}),Object(b.jsx)("p",{className:"endpoint",children:"endpoints:"}),Object(b.jsxs)("ul",{children:[Object(b.jsxs)("li",{children:["1. ",Object(b.jsx)("strong",{children:"/"})," ---- gets all users from db",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["2. ",Object(b.jsx)("strong",{children:"/register"})," ---- creates/registers new user",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"recieves:"})," first name, last name, phone, email, password",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"saves to DB:"})," firstName, lastName, email, phone, password(hashed), fullName, isAdmin(initially false), isTandem(initially null), companyId(initially null), vehicleId(initially null), createdAt",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"applied middlewares:"})," ",Object(b.jsx)("strong",{children:"checkUser"})," ---- checks if user email already exists in DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["3. ",Object(b.jsx)("strong",{children:"/login"})," ---- logs user in",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"recieves:"}),"  email, password",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),"signs JWT which is send to client",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"applied middlewares:"})," ",Object(b.jsx)("strong",{children:"checkLogin"})," ---- checks if user is already logged in"]})]})]}),Object(b.jsxs)("section",{children:[Object(b.jsx)("h2",{children:"user data"}),Object(b.jsxs)("p",{className:"url",children:["base url: ",Object(b.jsx)("strong",{children:"/api/user-data"})]}),Object(b.jsx)("p",{className:"endpoint",children:"endpoints:"}),Object(b.jsxs)("ul",{children:[Object(b.jsxs)("li",{children:["1. ",Object(b.jsx)("strong",{children:"/all"})," ---- gets all data for all users from DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["2. ",Object(b.jsx)("strong",{children:"/:id"})," -- gets all data for particular user",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["3. ",Object(b.jsx)("strong",{children:"/"})," --- adds new data to userData collection",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST"]})]})]}),Object(b.jsxs)("section",{children:[Object(b.jsx)("h2",{children:"vehicles"}),Object(b.jsxs)("p",{className:"url",children:["base url: ",Object(b.jsx)("strong",{children:"/api/vehicles"})]}),Object(b.jsx)("p",{className:"endpoint",children:"endpoints:"}),Object(b.jsxs)("ul",{children:[Object(b.jsxs)("li",{children:["1. ",Object(b.jsx)("strong",{children:"/"})," ---- gets all vehicles from DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["2. ",Object(b.jsx)("strong",{children:"/add"})," ---- creates new vehicle",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"recieves:"}),"  name, licensePlate, description",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"saves to DB:"})," name, licensePlate, description, createData, hasDriver(initially false), idPair(initially false), idTandem(initially false), deviceID(initially null)",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"applied middlewares:"})," ",Object(b.jsx)("strong",{children:"checkIfExists"})," ---- checks if vehicle aready exists",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["3. ",Object(b.jsx)("strong",{children:"/edit/:id"})," --- edits properties for particular vehicle",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["4. ",Object(b.jsx)("strong",{children:"/devices"})," ---- gets devices for vehicles",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["5. ",Object(b.jsx)("strong",{children:"/device/:id"})," --- gets particular device",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["6. ",Object(b.jsx)("strong",{children:"/pair/:id"})," ---- pairs particular vehicle with tracking device",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"applied middlewares:"})," ",Object(b.jsx)("strong",{children:"getDevice"})," ---- gets device to be connected with vehicle"]})]})]}),Object(b.jsxs)("section",{children:[Object(b.jsx)("h2",{children:"drivers"}),Object(b.jsxs)("p",{className:"url",children:["base url: ",Object(b.jsx)("strong",{children:"/api/drivers"})]}),Object(b.jsx)("p",{className:"endpoint",children:"endpoints:"}),Object(b.jsxs)("ul",{children:[Object(b.jsxs)("li",{children:["1. ",Object(b.jsx)("strong",{children:"/"})," ---- gets all drivers from DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["2. ",Object(b.jsx)("strong",{children:"/add"})," ---- creates/adds new driver to DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," POST",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"recieves:"}),"  firstName, lastName, email, vehicle, password, confirmPassword, description saves to DB: firstName, lastName, email, vehicle, password(hashed), description",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"applied middlewares:"})," ",Object(b.jsx)("strong",{children:"checkIfExists"})," ---- check if driver with provided email alreeady exists in DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["3. ",Object(b.jsx)("strong",{children:"/delete/:id"})," ---- removes driver from DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," DELETE",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]}),Object(b.jsxs)("li",{children:["3. ",Object(b.jsx)("strong",{children:"/edit/:id"})," ---- edit certain driver's properties",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," PUT"]})]})]}),Object(b.jsxs)("section",{children:[Object(b.jsx)("h2",{children:"tandem driver"}),Object(b.jsxs)("p",{className:"url",children:["base url: ",Object(b.jsx)("strong",{children:"/api/tandem-driver"})]}),Object(b.jsx)("p",{className:"endpoint",children:"endpoints:"}),Object(b.jsx)("ul",{children:Object(b.jsxs)("li",{children:["1. ",Object(b.jsx)("strong",{children:"/"})," ---- gets all tandem drivers from DB",Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{children:"method:"})," GET"]})})]})]})]})},l=function(e){e&&e instanceof Function&&c.e(3).then(c.bind(null,11)).then((function(s){var c=s.getCLS,j=s.getFID,t=s.getFCP,r=s.getLCP,i=s.getTTFB;c(e),j(e),t(e),r(e),i(e)}))};i.a.render(Object(b.jsx)(t.a.StrictMode,{children:Object(b.jsx)(n,{})}),document.getElementById("root")),l()},8:function(e,s,c){}},[[10,1,2]]]);
//# sourceMappingURL=main.989c3065.chunk.js.map